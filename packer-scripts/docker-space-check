#!/usr/bin/env bash
set -euo pipefail

# colors
RED='\033[0;31m'; GREEN='\033[0;32m'; YELLOW='\033[1;33m'; NC='\033[0m'

echo -e "${GREEN}=== 1. Host filesystem ===${NC}"
echo "- root ('/'):"    
df -h /
echo "- Docker data dir ('/var/lib/docker'):"  
df -h /var/lib/docker || echo -e "${YELLOW}  /var/lib/docker is not a mount point or does not exist${NC}"

echo
echo -e "${GREEN}=== 2. 'docker info' details ===${NC}"
docker info --format \
'Storage Driver: {{.Driver}}
Backing Filesystem: {{index .DriverStatus 0 1}}
Data Space Used: {{index .DriverStatus 1 1}}
Data Space Total: {{index .DriverStatus 2 1}}
Metadata Space Used: {{index .DriverStatus 3 1}}
Metadata Space Total: {{index .DriverStatus 4 1}}'

echo
echo -e "${GREEN}=== 3. 'docker system df' summary ===${NC}"
docker system df

echo
echo -e "${GREEN}=== 4. Check free space INSIDE a container ===${NC}"
docker run --rm --entrypoint sh travisci/gce-parity:20.04 -c "
  echo 'Inside container: df -h /'; 
  df -h /"

echo
echo -e "${GREEN}=== 5. Largest overlay2 layer directories ===${NC}"
if [ -d /var/lib/docker/overlay2 ]; then
  du -h /var/lib/docker/overlay2/*/diff 2>/dev/null \
    | sort -hr | head -n 10
else
  echo -e "${YELLOW}overlay2 directory does not exist${NC}"
fi

echo
echo -e "${GREEN}=== 6. Images and containers size overview ===${NC}"
docker images --format '  {{.Repository}}:{{.Tag}}\t{{.Size}}' | sort -h
docker ps -a --format '  {{.Image}}\t{{.Status}}'

echo
echo -e "${GREEN}=== 7. Recommendations ===${NC}"
echo "- If PhantomJS or Yarn layers are large, consider removing them before commit:"
echo "    in FINAL CLEANUP: rm -rf /usr/local/phantomjs-2.1.1 /usr/local/yarn-latest"
echo "- If Dockerâ€™s storage pool is too small, consider configuring dm.basesize or mounting another disk at /var/lib/docker."

echo -e "${GREEN}=== DONE ===${NC}"
