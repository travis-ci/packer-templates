#!/usr/bin/env bash

# shellcheck disable=SC1091
# shellcheck disable=SC1090

set -o errexit
set -o xtrace

main() {

  dist=$(lsb_release -cs)

  if [[ "${dist}" = "jammy" ]]; then
    apt install linux-headers-generic -y

    echo "Installing pip-review"

    # Install rustc (needed for python updates)
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    export PATH="$HOME/.cargo/bin:$PATH"
    source ~/.bashrc
    rustc --version

    sudo apt-get install -y libgirepository1.0-dev libdbus-1-dev libsystemd-dev libcurl4-openssl-dev python3-testresources

    pip install --upgrade pip
    # pip install pip-review
    # pip-review --auto

    echo "Appling docker buildx fix"
    sudo install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    sudo chmod a+r /etc/apt/keyrings/docker.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    sudo apt-get update -y
    sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    # Update composer
    /home/travis/.phpenv/shims/composer self-update

    # Update bundler
    gem install bundler
  else
    echo "Appling main updates"
    apt update -yqq --fix-missing

    echo "Uninstalling old kernel modules"
    # Usuwamy stare obrazy jądra – najpierw sprawdzamy, czy lista nie jest pusta
    old_kernel_images=$(dpkg --list | grep linux-image | awk '{ print $2 }' | sort -V | sed -n "/$(uname -r)/q;p")
    if [ -n "$old_kernel_images" ]; then
      echo "$old_kernel_images" | xargs sudo apt-get -y purge
    else
      echo "Brak starych kernel images do usunięcia."
    fi

    # Usuwamy pakiety dla linux-image i linux-headers w pętli,
    # sprawdzając dla każdego tagu, czy lista pakietów nie jest pusta.
    for tag in "linux-image" "linux-headers"; do
      pkgs=$(dpkg-query -W -f='${Package}\n' "$tag-[0-9]*.[0-9]*.[0-9]*" | sort -V | awk -v c="$(uname -r | cut -d- -f1,2)" 'index($0,c){exit} {print}')
      if [ -n "$pkgs" ]; then
        echo "$pkgs" | xargs sudo apt-get -y purge
      else
        echo "Brak pakietów dla $tag do usunięcia."
      fi
    done

    apt full-upgrade -y
    apt install linux-headers-generic -y

    # Install rustc (needed for python updates)
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    export PATH="$HOME/.cargo/bin:$PATH"
    source ~/.bashrc
    rustc --version

    echo "Appling python updates"
    sudo apt-get install -y libgirepository1.0-dev libdbus-1-dev libsystemd-dev libcurl4-openssl-dev python3-testresources

    pip3 install --upgrade pip
    pip3 install pip-review
    pip-review --auto

    echo "Appling docker buildx fix"
    sudo install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    sudo chmod a+r /etc/apt/keyrings/docker.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    sudo apt update -y
    sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    # Bionic install git
    if [[ "${dist}" = "bionic" ]]; then
      sudo apt install git-all -y
    fi

    # Update composer
    /home/travis/.phpenv/shims/composer self-update

    # Możesz dodać tutaj kolejne aktualizacje, np. dla bundlera
  fi

}

main "$@"
