#!/usr/bin/env bash

set -o errexit
set -o xtrace

main() {

   dist=$(lsb_release -cs)
   echo "Appling main updates"
   apt update -yqq
   echo "Uninstalling old kernel modules"
   dpkg --list | grep linux-image | awk '{ print $2 }' | sort -V | sed -n '/'`uname -r`'/q;p' | xargs sudo apt-get -y purge
   apt purge $(for tag in "linux-image" "linux-headers"; do dpkg-query -W -f'${Package}\n' "$tag-[0-9]*.[0-9]*.[0-9]*" | sort -V | awk 'index($0,c){exit} //' c=$(uname -r | cut -d- -f1,2); done)

   apt full-upgrade -y
   apt install linux-headers-generic -y

   # Uninstall old kernels (yes they are still there) - use it to uninstall when needed only DOCKER

   if [[ "${dist}" = "focal" ]]; then
      apt remove -y linux-gcp-headers-5.4.0-1080 linux-modules-5.15.0-1006-gcp linux-modules-5.15.0-1060-gcp
      echo "Installing updated kernel modules"
      apt install -y --no-install-suggests --no-install-recommends linux-gcp-headers-5.4.0-1129 linux-modules-5.15.0-1060-gcp
   # elif [[ "${dist}" = "bionic" ]]; then
   # apt remove -y linux-modules-5.4.0-1080
   # apt install -yqq --no-install-suggests --no-install-recommends \
   # linux-modules-5.4.0-1106
   fi
   # # Remove system-package installed python packages
   # apt remove --purge python3-setuptools -y

   echo "Appling python updates"
   # wget https://bootstrap.pypa.io/get-pip.py
   # sudo python3 get-pip.py

   # Focal install python modules
   if [[ "${dist}" = "focal" ]]; then
      pip install --upgrade pip pyopenssl certifi rsa pytest oauthlib testresources setuptools dbus-python numpy pip-review
      pip-review --auto
   else
      pip install --upgrade pip-review
      pip-review --auto
   fi

   echo "Appling docker buildx fix"
   sudo install -m 0755 -d /etc/apt/keyrings
   curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
   sudo chmod a+r /etc/apt/keyrings/docker.gpg
   echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
   sudo apt update -y
   sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
   #pip install --upgrade pip pyopenssl certifi rsa pytest oauthlib testresources setuptools numpy

   # Bionic install git
   if [[ "${dist}" = "bionic" ]]; then
      sudo apt install git-all
   fi

   # Install required clang
   clang_version=18
   wget https://apt.llvm.org/llvm.sh
   chmod +x llvm.sh
   sudo ./llvm.sh $clang_version

   # Update composer
   /home/travis/.phpenv/shims/composer self-update

   # # Update bundler - to fix in the future
   # /home/travis/.rvm/bin/rvm use 3.3.1
   # gem install rubygems-update
   # update_rubygems
   # gem update --system

}

main "$@"
