#!/usr/bin/env bash

# shellcheck disable=SC1091,SC1090
set -o errexit
set -o nounset
set -o pipefail
set -o xtrace

main() {
  dist=$(lsb_release -cs)

  echo "Detected distribution: ${dist}"
  sudo apt update -yqq --fix-missing

  # Install rust (for native Python modules)
  echo "Installing Rust..."
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y || echo "Rust install failed"
  export PATH="$HOME/.cargo/bin:$PATH"
  source "$HOME/.cargo/env" || true
  rustc --version || echo "Rust not available"

  # Python-related packages
  echo "Installing Python-related system packages..."
  sudo apt-get install -y \
    libgirepository1.0-dev \
    libdbus-1-dev \
    libsystemd-dev \
    libcurl4-openssl-dev \
    python3-testresources || echo "Some Python deps failed"

  # Install or upgrade pip and pip-review
  echo "Installing/upgrading pip & pip-review..."
  pip3 install --upgrade pip || echo "pip upgrade failed"
  pip3 install pip-review || echo "pip-review install failed"
  pip-review --auto || echo "pip-review run failed"

  # Docker & Buildx setup
  echo "Setting up Docker + Buildx..."
  sudo install -m 0755 -d /etc/apt/keyrings
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  sudo chmod a+r /etc/apt/keyrings/docker.gpg
  echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu ${dist} stable" |
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  sudo apt update -y
  sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin || echo "Docker install failed"

  if [[ "${dist}" == "jammy" ]]; then
    echo "Installing extras for Jammy..."
    /home/travis/.phpenv/shims/composer self-update || echo "Composer update failed"
    gem install bundler || echo "Bundler update failed"
  fi

  if [[ "${dist}" == "bionic" ]]; then
    sudo apt install -y git-all || echo "Git install failed"
    /home/travis/.phpenv/shims/composer self-update || echo "Composer update failed"
  fi

  echo "System update complete for ${dist}"
}

main "$@"
