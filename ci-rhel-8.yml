---
description: Travis CI Red Hat Universal Base Image 8 build env template
variables:
  chef_log_level: info
  docker_repository: travisci/ci-rhel-8
  docker_tag: packer-{{ timestamp }}-<%= git_desc %>
  gce_account_file: "{{ env `GCE_ACCOUNT_FILE` }}"
  gce_project_id: "{{ env `GCE_PROJECT_ID` }}"
  image_name: travis-ci-rhel-8-{{ timestamp }}-<%= git_desc %>
  travis_cookbooks_branch: "{{ env `TRAVIS_COOKBOOKS_BRANCH` }}"
  travis_cookbooks_edge_branch: master
  travis_cookbooks_sha: "{{ env `TRAVIS_COOKBOOKS_SHA` }}"
  travis_uid: "{{ env `TRAVIS_UID` }}"
  travis_subnet_id: "{{ env `TRAVIS_SUBNET_ID` }}"
  travis_vpc_id: "{{ env `TRAVIS_VPC_ID` }}"
  travis_source_ami: "{{ env `TRAVIS_SOURCE_AMI` }}"
builders:
- type: docker
  name: docker
  ssh_pty: true
  image: "redhat/ubi8"
  run_command:
  - -d
  - -v
  - <%= Dir.pwd %>/tmp/packer-builder-tmp:/tmp
  - --privileged=true
    # Disable on bionic, it's only supported overlay fs on xfs with quota
    #  - --storage-opt=size=11G
  - "{{ .Image }}"
  - /sbin/init
  commit: true
provisioners:
- type: shell
  scripts:
  - packer-scripts/pre-chef-bootstrap-rhel
  environment_vars:
  - TRAVIS_UID={{ user `travis_uid` }}
  execute_command: "{{ .Vars }} exec bash '{{ .Path }}'"
- type: shell
  scripts:
  - packer-scripts/rhel8-install-pkgs
  environment_vars:
  - TRAVIS_UID={{ user `travis_uid` }}
  execute_command: "{{ .Vars }} exec sudo -u travis -E -S bash '{{ .Path }}'"
- type: shell
  scripts:
  - packer-scripts/cosign-install
  environment_vars:
  - TRAVIS_UID={{ user `travis_uid` }}
  execute_command: "{{ .Vars }} exec sudo -E -S bash '{{ .Path }}'"
- type: shell
  scripts:
  - packer-scripts/packer-env-dump
  execute_command: "{{ .Vars }} exec sudo -E -S bash '{{ .Path }}'"
- type: shell
  scripts:
  - packer-scripts/create-rhel8-job-board-data
  - packer-scripts/create-image-metadata-tarball-bsd
  environment_vars:
  - JOB_BOARD_REGISTER_FILE=/.job_board_register.yml
  - IMAGE_METADATA_TARBALL=/var/tmp/image-metadata-{{ user `image_name` }}.tar.bz2
  execute_command: "{{ .Vars }} exec sudo -E -S bash '{{ .Path }}'"
- type: file
  source: /var/tmp/image-metadata-{{ user `image_name` }}.tar.bz2
  destination: tmp/image-metadata-{{ user `image_name` }}.tar.bz2
  direction: download
post-processors:
-
  - type: docker-tag
    repository: "{{ user `docker_repository` }}"
    tag: "{{ user `docker_tag` }}"
    only:
    - docker
  - type: shell-local
    scripts: bin/docker-push
    environment_vars:
    - DOCKER_DEST={{ user `docker_repository` }}:{{ user `docker_tag` }}
    only:
    - docker
#-
#  - type: shell-local
#    script: bin/job-board-register
#    environment_vars:
#    - IMAGE_NAME={{ user `docker_repository` }}:{{ user `docker_tag` }}
#    only:
#    - docker
-
  - type: shell-local
    script: bin/write-latest-image-name
